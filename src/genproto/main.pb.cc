// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: main.proto
// Protobuf C++ Version: 5.27.0

#include "main.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr RendererEvent_Block::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RendererEvent_Block::RendererEvent_Block(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RendererEvent_BlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RendererEvent_BlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RendererEvent_BlockDefaultTypeInternal() {}
  union {
    RendererEvent_Block _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RendererEvent_BlockDefaultTypeInternal _RendererEvent_Block_default_instance_;

inline constexpr MouseMoveEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xoffset_{0},
        yoffset_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseMoveEvent::MouseMoveEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MouseMoveEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseMoveEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseMoveEventDefaultTypeInternal() {}
  union {
    MouseMoveEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseMoveEventDefaultTypeInternal _MouseMoveEvent_default_instance_;

inline constexpr CameraEvent_Rotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pitch_{0},
        yaw_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraEvent_Rotation::CameraEvent_Rotation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraEvent_RotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraEvent_RotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraEvent_RotationDefaultTypeInternal() {}
  union {
    CameraEvent_Rotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraEvent_RotationDefaultTypeInternal _CameraEvent_Rotation_default_instance_;

inline constexpr CameraEvent_Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraEvent_Position::CameraEvent_Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraEvent_PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraEvent_PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraEvent_PositionDefaultTypeInternal() {}
  union {
    CameraEvent_Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraEvent_PositionDefaultTypeInternal _CameraEvent_Position_default_instance_;

inline constexpr RendererEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::RendererEvent_Type >(0)},
        renderer_event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RendererEvent::RendererEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RendererEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RendererEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RendererEventDefaultTypeInternal() {}
  union {
    RendererEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RendererEventDefaultTypeInternal _RendererEvent_default_instance_;

inline constexpr CameraEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::CameraEvent_Type >(0)},
        camera_event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CameraEvent::CameraEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraEventDefaultTypeInternal() {}
  union {
    CameraEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraEventDefaultTypeInternal _CameraEvent_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::Event_EventType >(0)},
        event_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_main_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_main_2eproto = nullptr;
const ::uint32_t
    TableStruct_main_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MouseMoveEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MouseMoveEvent, _impl_.xoffset_),
        PROTOBUF_FIELD_OFFSET(::MouseMoveEvent, _impl_.yoffset_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Position, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Position, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Position, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Position, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Rotation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Rotation, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::CameraEvent_Rotation, _impl_.yaw_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CameraEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::CameraEvent, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CameraEvent, _impl_.type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::CameraEvent, _impl_.camera_event_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RendererEvent_Block, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RendererEvent_Block, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::RendererEvent_Block, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RendererEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::RendererEvent, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RendererEvent, _impl_.type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::RendererEvent, _impl_.renderer_event_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::Event, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.event_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MouseMoveEvent)},
        {10, -1, -1, sizeof(::CameraEvent_Position)},
        {21, -1, -1, sizeof(::CameraEvent_Rotation)},
        {31, -1, -1, sizeof(::CameraEvent)},
        {44, -1, -1, sizeof(::RendererEvent_Block)},
        {54, -1, -1, sizeof(::RendererEvent)},
        {68, -1, -1, sizeof(::Event)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_MouseMoveEvent_default_instance_._instance,
    &::_CameraEvent_Position_default_instance_._instance,
    &::_CameraEvent_Rotation_default_instance_._instance,
    &::_CameraEvent_default_instance_._instance,
    &::_RendererEvent_Block_default_instance_._instance,
    &::_RendererEvent_default_instance_._instance,
    &::_Event_default_instance_._instance,
};
const char descriptor_table_protodef_main_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nmain.proto\"2\n\016MouseMoveEvent\022\017\n\007xOffse"
    "t\030\001 \001(\001\022\017\n\007yOffset\030\002 \001(\001\"\220\003\n\013CameraEvent"
    "\022\037\n\004type\030\001 \001(\0162\021.CameraEvent.Type\022\023\n\tmov"
    "eSpeed\030\002 \001(\001H\000\022)\n\010position\030\003 \001(\0132\025.Camer"
    "aEvent.PositionH\000\022)\n\010rotation\030\004 \001(\0132\025.Ca"
    "meraEvent.RotationH\000\032+\n\010Position\022\t\n\001x\030\001 "
    "\001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\032&\n\010Rotation\022\r\n"
    "\005pitch\030\001 \001(\001\022\013\n\003yaw\030\002 \001(\001\"\217\001\n\004Type\022\013\n\007FO"
    "RWARD\020\000\022\014\n\010BACKWARD\020\001\022\010\n\004LEFT\020\002\022\t\n\005RIGHT"
    "\020\003\022\006\n\002UP\020\004\022\010\n\004DOWN\020\005\022\020\n\014FOV_INCREASE\020\006\022\020"
    "\n\014FOV_DECREASE\020\007\022\r\n\tPITCH_YAW\020\010\022\022\n\016SCENE"
    "_POSITION\020\tB\016\n\014camera_event\"\253\004\n\rRenderer"
    "Event\022!\n\004type\030\001 \001(\0162\023.RendererEvent.Type"
    "\022\025\n\013numberValue\030\002 \001(\005H\000\022*\n\nblockValue\030\003 "
    "\001(\0132\024.RendererEvent.BlockH\000\022\026\n\014booleanVa"
    "lue\030\004 \001(\010H\000\022G\n\026loadBalancingAlgorithm\030\005 "
    "\001(\0162%.RendererEvent.LoadBalancingAlgorit"
    "hmH\000\032\035\n\005Block\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"\354\001\n\004"
    "Type\022\027\n\023LOAD_UPLOADED_SCENE\020\000\022\033\n\027DOWNLOA"
    "D_SCENE_SNAPSHOT\020\001\022\016\n\nGPU_NUMBER\020\002\022\023\n\017ST"
    "REAMS_PER_GPU\020\003\022\025\n\021SAMPLES_PER_PIXEL\020\004\022\023"
    "\n\017RECURSION_DEPTH\020\005\022\025\n\021THREAD_BLOCK_SIZE"
    "\020\006\022\024\n\020IMAGE_RESOLUTION\020\007\022\022\n\016SHOW_TASK_GR"
    "ID\020\010\022\034\n\030LOAD_BALANCING_ALGORITHM\020\t\"3\n\026Lo"
    "adBalancingAlgorithm\022\007\n\003FST\020\000\022\010\n\004DTFL\020\001\022"
    "\006\n\002DT\020\002B\020\n\016renderer_event\"\357\001\n\005Event\022\036\n\004t"
    "ype\030\001 \001(\0162\020.Event.EventType\022$\n\tmouseMove"
    "\030\002 \001(\0132\017.MouseMoveEventH\000\022\036\n\006camera\030\003 \001("
    "\0132\014.CameraEventH\000\022\"\n\010renderer\030\004 \001(\0132\016.Re"
    "ndererEventH\000\"N\n\tEventType\022\013\n\007UNKNOWN\020\000\022"
    "\016\n\nMOUSE_MOVE\020\001\022\020\n\014CAMERA_EVENT\020\002\022\022\n\016REN"
    "DERER_EVENT\020\003B\014\n\nevent_typeb\006proto3"
};
static ::absl::once_flag descriptor_table_main_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_main_2eproto = {
    false,
    false,
    1275,
    descriptor_table_protodef_main_2eproto,
    "main.proto",
    &descriptor_table_main_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_main_2eproto::offsets,
    file_level_enum_descriptors_main_2eproto,
    file_level_service_descriptors_main_2eproto,
};
const ::google::protobuf::EnumDescriptor* CameraEvent_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_main_2eproto);
  return file_level_enum_descriptors_main_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CameraEvent_Type_internal_data_[] = {
    655360u, 0u, };
bool CameraEvent_Type_IsValid(int value) {
  return 0 <= value && value <= 9;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CameraEvent_Type CameraEvent::FORWARD;
constexpr CameraEvent_Type CameraEvent::BACKWARD;
constexpr CameraEvent_Type CameraEvent::LEFT;
constexpr CameraEvent_Type CameraEvent::RIGHT;
constexpr CameraEvent_Type CameraEvent::UP;
constexpr CameraEvent_Type CameraEvent::DOWN;
constexpr CameraEvent_Type CameraEvent::FOV_INCREASE;
constexpr CameraEvent_Type CameraEvent::FOV_DECREASE;
constexpr CameraEvent_Type CameraEvent::PITCH_YAW;
constexpr CameraEvent_Type CameraEvent::SCENE_POSITION;
constexpr CameraEvent_Type CameraEvent::Type_MIN;
constexpr CameraEvent_Type CameraEvent::Type_MAX;
constexpr int CameraEvent::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RendererEvent_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_main_2eproto);
  return file_level_enum_descriptors_main_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RendererEvent_Type_internal_data_[] = {
    655360u, 0u, };
bool RendererEvent_Type_IsValid(int value) {
  return 0 <= value && value <= 9;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RendererEvent_Type RendererEvent::LOAD_UPLOADED_SCENE;
constexpr RendererEvent_Type RendererEvent::DOWNLOAD_SCENE_SNAPSHOT;
constexpr RendererEvent_Type RendererEvent::GPU_NUMBER;
constexpr RendererEvent_Type RendererEvent::STREAMS_PER_GPU;
constexpr RendererEvent_Type RendererEvent::SAMPLES_PER_PIXEL;
constexpr RendererEvent_Type RendererEvent::RECURSION_DEPTH;
constexpr RendererEvent_Type RendererEvent::THREAD_BLOCK_SIZE;
constexpr RendererEvent_Type RendererEvent::IMAGE_RESOLUTION;
constexpr RendererEvent_Type RendererEvent::SHOW_TASK_GRID;
constexpr RendererEvent_Type RendererEvent::LOAD_BALANCING_ALGORITHM;
constexpr RendererEvent_Type RendererEvent::Type_MIN;
constexpr RendererEvent_Type RendererEvent::Type_MAX;
constexpr int RendererEvent::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RendererEvent_LoadBalancingAlgorithm_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_main_2eproto);
  return file_level_enum_descriptors_main_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t RendererEvent_LoadBalancingAlgorithm_internal_data_[] = {
    196608u, 0u, };
bool RendererEvent_LoadBalancingAlgorithm_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RendererEvent_LoadBalancingAlgorithm RendererEvent::FST;
constexpr RendererEvent_LoadBalancingAlgorithm RendererEvent::DTFL;
constexpr RendererEvent_LoadBalancingAlgorithm RendererEvent::DT;
constexpr RendererEvent_LoadBalancingAlgorithm RendererEvent::LoadBalancingAlgorithm_MIN;
constexpr RendererEvent_LoadBalancingAlgorithm RendererEvent::LoadBalancingAlgorithm_MAX;
constexpr int RendererEvent::LoadBalancingAlgorithm_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Event_EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_main_2eproto);
  return file_level_enum_descriptors_main_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Event_EventType_internal_data_[] = {
    262144u, 0u, };
bool Event_EventType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Event_EventType Event::UNKNOWN;
constexpr Event_EventType Event::MOUSE_MOVE;
constexpr Event_EventType Event::CAMERA_EVENT;
constexpr Event_EventType Event::RENDERER_EVENT;
constexpr Event_EventType Event::EventType_MIN;
constexpr Event_EventType Event::EventType_MAX;
constexpr int Event::EventType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class MouseMoveEvent::_Internal {
 public:
};

MouseMoveEvent::MouseMoveEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MouseMoveEvent)
}
MouseMoveEvent::MouseMoveEvent(
    ::google::protobuf::Arena* arena, const MouseMoveEvent& from)
    : MouseMoveEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MouseMoveEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseMoveEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xoffset_),
           0,
           offsetof(Impl_, yoffset_) -
               offsetof(Impl_, xoffset_) +
               sizeof(Impl_::yoffset_));
}
MouseMoveEvent::~MouseMoveEvent() {
  // @@protoc_insertion_point(destructor:MouseMoveEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseMoveEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MouseMoveEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_._cached_size_),
              false,
          },
          &MouseMoveEvent::MergeImpl,
          &MouseMoveEvent::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MouseMoveEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MouseMoveEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MouseMoveEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double yOffset = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.yoffset_)}},
    // double xOffset = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.xoffset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double xOffset = 1;
    {PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.xoffset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double yOffset = 2;
    {PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.yoffset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MouseMoveEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:MouseMoveEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.xoffset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yoffset_) -
      reinterpret_cast<char*>(&_impl_.xoffset_)) + sizeof(_impl_.yoffset_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MouseMoveEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MouseMoveEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double xOffset = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_xoffset = this->_internal_xoffset();
  ::uint64_t raw_xoffset;
  memcpy(&raw_xoffset, &tmp_xoffset, sizeof(tmp_xoffset));
  if (raw_xoffset != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_xoffset(), target);
  }

  // double yOffset = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yoffset = this->_internal_yoffset();
  ::uint64_t raw_yoffset;
  memcpy(&raw_yoffset, &tmp_yoffset, sizeof(tmp_yoffset));
  if (raw_yoffset != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_yoffset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MouseMoveEvent)
  return target;
}

::size_t MouseMoveEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MouseMoveEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // double xOffset = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_xoffset = this->_internal_xoffset();
  ::uint64_t raw_xoffset;
  memcpy(&raw_xoffset, &tmp_xoffset, sizeof(tmp_xoffset));
  if (raw_xoffset != 0) {
    total_size += 9;
  }

  // double yOffset = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yoffset = this->_internal_yoffset();
  ::uint64_t raw_yoffset;
  memcpy(&raw_yoffset, &tmp_yoffset, sizeof(tmp_yoffset));
  if (raw_yoffset != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MouseMoveEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MouseMoveEvent*>(&to_msg);
  auto& from = static_cast<const MouseMoveEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MouseMoveEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_xoffset = from._internal_xoffset();
  ::uint64_t raw_xoffset;
  memcpy(&raw_xoffset, &tmp_xoffset, sizeof(tmp_xoffset));
  if (raw_xoffset != 0) {
    _this->_impl_.xoffset_ = from._impl_.xoffset_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yoffset = from._internal_yoffset();
  ::uint64_t raw_yoffset;
  memcpy(&raw_yoffset, &tmp_yoffset, sizeof(tmp_yoffset));
  if (raw_yoffset != 0) {
    _this->_impl_.yoffset_ = from._impl_.yoffset_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseMoveEvent::CopyFrom(const MouseMoveEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MouseMoveEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MouseMoveEvent::InternalSwap(MouseMoveEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.yoffset_)
      + sizeof(MouseMoveEvent::_impl_.yoffset_)
      - PROTOBUF_FIELD_OFFSET(MouseMoveEvent, _impl_.xoffset_)>(
          reinterpret_cast<char*>(&_impl_.xoffset_),
          reinterpret_cast<char*>(&other->_impl_.xoffset_));
}

::google::protobuf::Metadata MouseMoveEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraEvent_Position::_Internal {
 public:
};

CameraEvent_Position::CameraEvent_Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CameraEvent.Position)
}
CameraEvent_Position::CameraEvent_Position(
    ::google::protobuf::Arena* arena, const CameraEvent_Position& from)
    : CameraEvent_Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CameraEvent_Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CameraEvent_Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
CameraEvent_Position::~CameraEvent_Position() {
  // @@protoc_insertion_point(destructor:CameraEvent.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraEvent_Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CameraEvent_Position::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_._cached_size_),
              false,
          },
          &CameraEvent_Position::MergeImpl,
          &CameraEvent_Position::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CameraEvent_Position::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CameraEvent_Position_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CameraEvent_Position>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CameraEvent_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:CameraEvent.Position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CameraEvent_Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CameraEvent.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CameraEvent.Position)
  return target;
}

::size_t CameraEvent_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CameraEvent.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CameraEvent_Position::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraEvent_Position*>(&to_msg);
  auto& from = static_cast<const CameraEvent_Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CameraEvent.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraEvent_Position::CopyFrom(const CameraEvent_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CameraEvent.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraEvent_Position::InternalSwap(CameraEvent_Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.z_)
      + sizeof(CameraEvent_Position::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(CameraEvent_Position, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CameraEvent_Position::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraEvent_Rotation::_Internal {
 public:
};

CameraEvent_Rotation::CameraEvent_Rotation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CameraEvent.Rotation)
}
CameraEvent_Rotation::CameraEvent_Rotation(
    ::google::protobuf::Arena* arena, const CameraEvent_Rotation& from)
    : CameraEvent_Rotation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CameraEvent_Rotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CameraEvent_Rotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pitch_),
           0,
           offsetof(Impl_, yaw_) -
               offsetof(Impl_, pitch_) +
               sizeof(Impl_::yaw_));
}
CameraEvent_Rotation::~CameraEvent_Rotation() {
  // @@protoc_insertion_point(destructor:CameraEvent.Rotation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraEvent_Rotation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CameraEvent_Rotation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_._cached_size_),
              false,
          },
          &CameraEvent_Rotation::MergeImpl,
          &CameraEvent_Rotation::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CameraEvent_Rotation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CameraEvent_Rotation_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CameraEvent_Rotation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double yaw = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.yaw_)}},
    // double pitch = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.pitch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double pitch = 1;
    {PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.pitch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double yaw = 2;
    {PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.yaw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CameraEvent_Rotation::Clear() {
// @@protoc_insertion_point(message_clear_start:CameraEvent.Rotation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.pitch_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_) -
      reinterpret_cast<char*>(&_impl_.pitch_)) + sizeof(_impl_.yaw_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CameraEvent_Rotation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CameraEvent.Rotation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double pitch = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pitch = this->_internal_pitch();
  ::uint64_t raw_pitch;
  memcpy(&raw_pitch, &tmp_pitch, sizeof(tmp_pitch));
  if (raw_pitch != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_pitch(), target);
  }

  // double yaw = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yaw = this->_internal_yaw();
  ::uint64_t raw_yaw;
  memcpy(&raw_yaw, &tmp_yaw, sizeof(tmp_yaw));
  if (raw_yaw != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_yaw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CameraEvent.Rotation)
  return target;
}

::size_t CameraEvent_Rotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CameraEvent.Rotation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // double pitch = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pitch = this->_internal_pitch();
  ::uint64_t raw_pitch;
  memcpy(&raw_pitch, &tmp_pitch, sizeof(tmp_pitch));
  if (raw_pitch != 0) {
    total_size += 9;
  }

  // double yaw = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yaw = this->_internal_yaw();
  ::uint64_t raw_yaw;
  memcpy(&raw_yaw, &tmp_yaw, sizeof(tmp_yaw));
  if (raw_yaw != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CameraEvent_Rotation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraEvent_Rotation*>(&to_msg);
  auto& from = static_cast<const CameraEvent_Rotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CameraEvent.Rotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pitch = from._internal_pitch();
  ::uint64_t raw_pitch;
  memcpy(&raw_pitch, &tmp_pitch, sizeof(tmp_pitch));
  if (raw_pitch != 0) {
    _this->_impl_.pitch_ = from._impl_.pitch_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_yaw = from._internal_yaw();
  ::uint64_t raw_yaw;
  memcpy(&raw_yaw, &tmp_yaw, sizeof(tmp_yaw));
  if (raw_yaw != 0) {
    _this->_impl_.yaw_ = from._impl_.yaw_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraEvent_Rotation::CopyFrom(const CameraEvent_Rotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CameraEvent.Rotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraEvent_Rotation::InternalSwap(CameraEvent_Rotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.yaw_)
      + sizeof(CameraEvent_Rotation::_impl_.yaw_)
      - PROTOBUF_FIELD_OFFSET(CameraEvent_Rotation, _impl_.pitch_)>(
          reinterpret_cast<char*>(&_impl_.pitch_),
          reinterpret_cast<char*>(&other->_impl_.pitch_));
}

::google::protobuf::Metadata CameraEvent_Rotation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraEvent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::CameraEvent, _impl_._oneof_case_);
};

void CameraEvent::set_allocated_position(::CameraEvent_Position* position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_camera_event();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.camera_event_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:CameraEvent.position)
}
void CameraEvent::set_allocated_rotation(::CameraEvent_Rotation* rotation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_camera_event();
  if (rotation) {
    ::google::protobuf::Arena* submessage_arena = rotation->GetArena();
    if (message_arena != submessage_arena) {
      rotation = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotation, submessage_arena);
    }
    set_has_rotation();
    _impl_.camera_event_.rotation_ = rotation;
  }
  // @@protoc_insertion_point(field_set_allocated:CameraEvent.rotation)
}
CameraEvent::CameraEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CameraEvent)
}
inline PROTOBUF_NDEBUG_INLINE CameraEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CameraEvent& from_msg)
      : camera_event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CameraEvent::CameraEvent(
    ::google::protobuf::Arena* arena,
    const CameraEvent& from)
    : ::google::protobuf::Message(arena) {
  CameraEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;
  switch (camera_event_case()) {
    case CAMERA_EVENT_NOT_SET:
      break;
      case kMoveSpeed:
        _impl_.camera_event_.movespeed_ = from._impl_.camera_event_.movespeed_;
        break;
      case kPosition:
        _impl_.camera_event_.position_ = ::google::protobuf::Message::CopyConstruct<::CameraEvent_Position>(arena, *from._impl_.camera_event_.position_);
        break;
      case kRotation:
        _impl_.camera_event_.rotation_ = ::google::protobuf::Message::CopyConstruct<::CameraEvent_Rotation>(arena, *from._impl_.camera_event_.rotation_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:CameraEvent)
}
inline PROTOBUF_NDEBUG_INLINE CameraEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : camera_event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CameraEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
CameraEvent::~CameraEvent() {
  // @@protoc_insertion_point(destructor:CameraEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_camera_event()) {
    clear_camera_event();
  }
  _impl_.~Impl_();
}

void CameraEvent::clear_camera_event() {
// @@protoc_insertion_point(one_of_clear_start:CameraEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (camera_event_case()) {
    case kMoveSpeed: {
      // No need to clear
      break;
    }
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.camera_event_.position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.camera_event_.position_);
      }
      break;
    }
    case kRotation: {
      if (GetArena() == nullptr) {
        delete _impl_.camera_event_.rotation_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.camera_event_.rotation_);
      }
      break;
    }
    case CAMERA_EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CAMERA_EVENT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
CameraEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_._cached_size_),
              false,
          },
          &CameraEvent::MergeImpl,
          &CameraEvent::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 2, 0, 2> CameraEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CameraEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CameraEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .CameraEvent.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraEvent, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .CameraEvent.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double moveSpeed = 2;
    {PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_.camera_event_.movespeed_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // .CameraEvent.Position position = 3;
    {PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_.camera_event_.position_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .CameraEvent.Rotation rotation = 4;
    {PROTOBUF_FIELD_OFFSET(CameraEvent, _impl_.camera_event_.rotation_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CameraEvent_Position>()},
    {::_pbi::TcParser::GetTable<::CameraEvent_Rotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CameraEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CameraEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_camera_event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CameraEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CameraEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .CameraEvent.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  switch (camera_event_case()) {
    case kMoveSpeed: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this->_internal_movespeed(), target);
      break;
    }
    case kPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.camera_event_.position_, _impl_.camera_event_.position_->GetCachedSize(), target, stream);
      break;
    }
    case kRotation: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.camera_event_.rotation_, _impl_.camera_event_.rotation_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CameraEvent)
  return target;
}

::size_t CameraEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CameraEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CameraEvent.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (camera_event_case()) {
    // double moveSpeed = 2;
    case kMoveSpeed: {
      total_size += 9;
      break;
    }
    // .CameraEvent.Position position = 3;
    case kPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_event_.position_);
      break;
    }
    // .CameraEvent.Rotation rotation = 4;
    case kRotation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_event_.rotation_);
      break;
    }
    case CAMERA_EVENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CameraEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraEvent*>(&to_msg);
  auto& from = static_cast<const CameraEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CameraEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_camera_event();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMoveSpeed: {
        _this->_impl_.camera_event_.movespeed_ = from._impl_.camera_event_.movespeed_;
        break;
      }
      case kPosition: {
        if (oneof_needs_init) {
          _this->_impl_.camera_event_.position_ =
              ::google::protobuf::Message::CopyConstruct<::CameraEvent_Position>(arena, *from._impl_.camera_event_.position_);
        } else {
          _this->_impl_.camera_event_.position_->MergeFrom(from._internal_position());
        }
        break;
      }
      case kRotation: {
        if (oneof_needs_init) {
          _this->_impl_.camera_event_.rotation_ =
              ::google::protobuf::Message::CopyConstruct<::CameraEvent_Rotation>(arena, *from._impl_.camera_event_.rotation_);
        } else {
          _this->_impl_.camera_event_.rotation_->MergeFrom(from._internal_rotation());
        }
        break;
      }
      case CAMERA_EVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraEvent::CopyFrom(const CameraEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CameraEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraEvent::InternalSwap(CameraEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.camera_event_, other->_impl_.camera_event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CameraEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RendererEvent_Block::_Internal {
 public:
};

RendererEvent_Block::RendererEvent_Block(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RendererEvent.Block)
}
RendererEvent_Block::RendererEvent_Block(
    ::google::protobuf::Arena* arena, const RendererEvent_Block& from)
    : RendererEvent_Block(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RendererEvent_Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RendererEvent_Block::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
RendererEvent_Block::~RendererEvent_Block() {
  // @@protoc_insertion_point(destructor:RendererEvent.Block)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RendererEvent_Block::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RendererEvent_Block::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_._cached_size_),
              false,
          },
          &RendererEvent_Block::MergeImpl,
          &RendererEvent_Block::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RendererEvent_Block::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RendererEvent_Block_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RendererEvent_Block>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RendererEvent_Block, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RendererEvent_Block, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RendererEvent_Block::Clear() {
// @@protoc_insertion_point(message_clear_start:RendererEvent.Block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RendererEvent_Block::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RendererEvent.Block)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RendererEvent.Block)
  return target;
}

::size_t RendererEvent_Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RendererEvent.Block)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RendererEvent_Block::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RendererEvent_Block*>(&to_msg);
  auto& from = static_cast<const RendererEvent_Block&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RendererEvent.Block)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RendererEvent_Block::CopyFrom(const RendererEvent_Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RendererEvent.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RendererEvent_Block::InternalSwap(RendererEvent_Block* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.y_)
      + sizeof(RendererEvent_Block::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(RendererEvent_Block, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata RendererEvent_Block::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RendererEvent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::RendererEvent, _impl_._oneof_case_);
};

void RendererEvent::set_allocated_blockvalue(::RendererEvent_Block* blockvalue) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_renderer_event();
  if (blockvalue) {
    ::google::protobuf::Arena* submessage_arena = blockvalue->GetArena();
    if (message_arena != submessage_arena) {
      blockvalue = ::google::protobuf::internal::GetOwnedMessage(message_arena, blockvalue, submessage_arena);
    }
    set_has_blockvalue();
    _impl_.renderer_event_.blockvalue_ = blockvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:RendererEvent.blockValue)
}
RendererEvent::RendererEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RendererEvent)
}
inline PROTOBUF_NDEBUG_INLINE RendererEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RendererEvent& from_msg)
      : renderer_event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RendererEvent::RendererEvent(
    ::google::protobuf::Arena* arena,
    const RendererEvent& from)
    : ::google::protobuf::Message(arena) {
  RendererEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;
  switch (renderer_event_case()) {
    case RENDERER_EVENT_NOT_SET:
      break;
      case kNumberValue:
        _impl_.renderer_event_.numbervalue_ = from._impl_.renderer_event_.numbervalue_;
        break;
      case kBlockValue:
        _impl_.renderer_event_.blockvalue_ = ::google::protobuf::Message::CopyConstruct<::RendererEvent_Block>(arena, *from._impl_.renderer_event_.blockvalue_);
        break;
      case kBooleanValue:
        _impl_.renderer_event_.booleanvalue_ = from._impl_.renderer_event_.booleanvalue_;
        break;
      case kLoadBalancingAlgorithm:
        _impl_.renderer_event_.loadbalancingalgorithm_ = from._impl_.renderer_event_.loadbalancingalgorithm_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:RendererEvent)
}
inline PROTOBUF_NDEBUG_INLINE RendererEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : renderer_event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RendererEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
RendererEvent::~RendererEvent() {
  // @@protoc_insertion_point(destructor:RendererEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RendererEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_renderer_event()) {
    clear_renderer_event();
  }
  _impl_.~Impl_();
}

void RendererEvent::clear_renderer_event() {
// @@protoc_insertion_point(one_of_clear_start:RendererEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (renderer_event_case()) {
    case kNumberValue: {
      // No need to clear
      break;
    }
    case kBlockValue: {
      if (GetArena() == nullptr) {
        delete _impl_.renderer_event_.blockvalue_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.renderer_event_.blockvalue_);
      }
      break;
    }
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kLoadBalancingAlgorithm: {
      // No need to clear
      break;
    }
    case RENDERER_EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RENDERER_EVENT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
RendererEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_._cached_size_),
              false,
          },
          &RendererEvent::MergeImpl,
          &RendererEvent::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 1, 0, 2> RendererEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RendererEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RendererEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RendererEvent.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RendererEvent, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RendererEvent.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 numberValue = 2;
    {PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.renderer_event_.numbervalue_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // .RendererEvent.Block blockValue = 3;
    {PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.renderer_event_.blockvalue_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool booleanValue = 4;
    {PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.renderer_event_.booleanvalue_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .RendererEvent.LoadBalancingAlgorithm loadBalancingAlgorithm = 5;
    {PROTOBUF_FIELD_OFFSET(RendererEvent, _impl_.renderer_event_.loadbalancingalgorithm_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RendererEvent_Block>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RendererEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:RendererEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_renderer_event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RendererEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RendererEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RendererEvent.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  switch (renderer_event_case()) {
    case kNumberValue: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<2>(
              stream, this->_internal_numbervalue(), target);
      break;
    }
    case kBlockValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.renderer_event_.blockvalue_, _impl_.renderer_event_.blockvalue_->GetCachedSize(), target, stream);
      break;
    }
    case kBooleanValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this->_internal_booleanvalue(), target);
      break;
    }
    case kLoadBalancingAlgorithm: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this->_internal_loadbalancingalgorithm(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RendererEvent)
  return target;
}

::size_t RendererEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RendererEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RendererEvent.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (renderer_event_case()) {
    // int32 numberValue = 2;
    case kNumberValue: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_numbervalue());
      break;
    }
    // .RendererEvent.Block blockValue = 3;
    case kBlockValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.renderer_event_.blockvalue_);
      break;
    }
    // bool booleanValue = 4;
    case kBooleanValue: {
      total_size += 2;
      break;
    }
    // .RendererEvent.LoadBalancingAlgorithm loadBalancingAlgorithm = 5;
    case kLoadBalancingAlgorithm: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_loadbalancingalgorithm());
      break;
    }
    case RENDERER_EVENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RendererEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RendererEvent*>(&to_msg);
  auto& from = static_cast<const RendererEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RendererEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_renderer_event();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNumberValue: {
        _this->_impl_.renderer_event_.numbervalue_ = from._impl_.renderer_event_.numbervalue_;
        break;
      }
      case kBlockValue: {
        if (oneof_needs_init) {
          _this->_impl_.renderer_event_.blockvalue_ =
              ::google::protobuf::Message::CopyConstruct<::RendererEvent_Block>(arena, *from._impl_.renderer_event_.blockvalue_);
        } else {
          _this->_impl_.renderer_event_.blockvalue_->MergeFrom(from._internal_blockvalue());
        }
        break;
      }
      case kBooleanValue: {
        _this->_impl_.renderer_event_.booleanvalue_ = from._impl_.renderer_event_.booleanvalue_;
        break;
      }
      case kLoadBalancingAlgorithm: {
        _this->_impl_.renderer_event_.loadbalancingalgorithm_ = from._impl_.renderer_event_.loadbalancingalgorithm_;
        break;
      }
      case RENDERER_EVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RendererEvent::CopyFrom(const RendererEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RendererEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RendererEvent::InternalSwap(RendererEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.renderer_event_, other->_impl_.renderer_event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RendererEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Event::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::Event, _impl_._oneof_case_);
};

void Event::set_allocated_mousemove(::MouseMoveEvent* mousemove) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event_type();
  if (mousemove) {
    ::google::protobuf::Arena* submessage_arena = mousemove->GetArena();
    if (message_arena != submessage_arena) {
      mousemove = ::google::protobuf::internal::GetOwnedMessage(message_arena, mousemove, submessage_arena);
    }
    set_has_mousemove();
    _impl_.event_type_.mousemove_ = mousemove;
  }
  // @@protoc_insertion_point(field_set_allocated:Event.mouseMove)
}
void Event::set_allocated_camera(::CameraEvent* camera) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event_type();
  if (camera) {
    ::google::protobuf::Arena* submessage_arena = camera->GetArena();
    if (message_arena != submessage_arena) {
      camera = ::google::protobuf::internal::GetOwnedMessage(message_arena, camera, submessage_arena);
    }
    set_has_camera();
    _impl_.event_type_.camera_ = camera;
  }
  // @@protoc_insertion_point(field_set_allocated:Event.camera)
}
void Event::set_allocated_renderer(::RendererEvent* renderer) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event_type();
  if (renderer) {
    ::google::protobuf::Arena* submessage_arena = renderer->GetArena();
    if (message_arena != submessage_arena) {
      renderer = ::google::protobuf::internal::GetOwnedMessage(message_arena, renderer, submessage_arena);
    }
    set_has_renderer();
    _impl_.event_type_.renderer_ = renderer;
  }
  // @@protoc_insertion_point(field_set_allocated:Event.renderer)
}
Event::Event(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Event& from_msg)
      : event_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
    : ::google::protobuf::Message(arena) {
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;
  switch (event_type_case()) {
    case EVENT_TYPE_NOT_SET:
      break;
      case kMouseMove:
        _impl_.event_type_.mousemove_ = ::google::protobuf::Message::CopyConstruct<::MouseMoveEvent>(arena, *from._impl_.event_type_.mousemove_);
        break;
      case kCamera:
        _impl_.event_type_.camera_ = ::google::protobuf::Message::CopyConstruct<::CameraEvent>(arena, *from._impl_.event_type_.camera_);
        break;
      case kRenderer:
        _impl_.event_type_.renderer_ = ::google::protobuf::Message::CopyConstruct<::RendererEvent>(arena, *from._impl_.event_type_.renderer_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:Event)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Event::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_event_type()) {
    clear_event_type();
  }
  _impl_.~Impl_();
}

void Event::clear_event_type() {
// @@protoc_insertion_point(one_of_clear_start:Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (event_type_case()) {
    case kMouseMove: {
      if (GetArena() == nullptr) {
        delete _impl_.event_type_.mousemove_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_type_.mousemove_);
      }
      break;
    }
    case kCamera: {
      if (GetArena() == nullptr) {
        delete _impl_.event_type_.camera_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_type_.camera_);
      }
      break;
    }
    case kRenderer: {
      if (GetArena() == nullptr) {
        delete _impl_.event_type_.renderer_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_type_.renderer_);
      }
      break;
    }
    case EVENT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Event::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
              false,
          },
          &Event::MergeImpl,
          &Event::kDescriptorMethods,
          &descriptor_table_main_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 0, 2> Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Event_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Event.EventType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Event.EventType type = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .MouseMoveEvent mouseMove = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_type_.mousemove_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .CameraEvent camera = 3;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_type_.camera_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .RendererEvent renderer = 4;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_type_.renderer_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MouseMoveEvent>()},
    {::_pbi::TcParser::GetTable<::CameraEvent>()},
    {::_pbi::TcParser::GetTable<::RendererEvent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_event_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Event::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Event)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Event.EventType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  switch (event_type_case()) {
    case kMouseMove: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.event_type_.mousemove_, _impl_.event_type_.mousemove_->GetCachedSize(), target, stream);
      break;
    }
    case kCamera: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.event_type_.camera_, _impl_.event_type_.camera_->GetCachedSize(), target, stream);
      break;
    }
    case kRenderer: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.event_type_.renderer_, _impl_.event_type_.renderer_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Event)
  return target;
}

::size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Event)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Event.EventType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (event_type_case()) {
    // .MouseMoveEvent mouseMove = 2;
    case kMouseMove: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_type_.mousemove_);
      break;
    }
    // .CameraEvent camera = 3;
    case kCamera: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_type_.camera_);
      break;
    }
    // .RendererEvent renderer = 4;
    case kRenderer: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_type_.renderer_);
      break;
    }
    case EVENT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_event_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMouseMove: {
        if (oneof_needs_init) {
          _this->_impl_.event_type_.mousemove_ =
              ::google::protobuf::Message::CopyConstruct<::MouseMoveEvent>(arena, *from._impl_.event_type_.mousemove_);
        } else {
          _this->_impl_.event_type_.mousemove_->MergeFrom(from._internal_mousemove());
        }
        break;
      }
      case kCamera: {
        if (oneof_needs_init) {
          _this->_impl_.event_type_.camera_ =
              ::google::protobuf::Message::CopyConstruct<::CameraEvent>(arena, *from._impl_.event_type_.camera_);
        } else {
          _this->_impl_.event_type_.camera_->MergeFrom(from._internal_camera());
        }
        break;
      }
      case kRenderer: {
        if (oneof_needs_init) {
          _this->_impl_.event_type_.renderer_ =
              ::google::protobuf::Message::CopyConstruct<::RendererEvent>(arena, *from._impl_.event_type_.renderer_);
        } else {
          _this->_impl_.event_type_.renderer_->MergeFrom(from._internal_renderer());
        }
        break;
      }
      case EVENT_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.event_type_, other->_impl_.event_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_main_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
